[{"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\index.js":"1","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\App.js":"3","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\navbar.jsx":"4","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\introduction.jsx":"5","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\timeline.jsx":"6","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\about.jsx":"7","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\contact.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":543,"mtime":1611695270000,"results":"12","hashOfConfig":"10"},{"size":3325,"mtime":1619799396373,"results":"13","hashOfConfig":"10"},{"size":1993,"mtime":1619825453314,"results":"14","hashOfConfig":"10"},{"size":8173,"mtime":1619824350665,"results":"15","hashOfConfig":"10"},{"size":8071,"mtime":1619824276412,"results":"16","hashOfConfig":"10"},{"size":4974,"mtime":1619824289117,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"sbx37d",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\index.js",[],["37","38"],"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\App.js",[],"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\navbar.jsx",["39","40","41"],"import React, { Component } from 'react';\r\nimport {Navbar, Nav,  } from \"react-bootstrap\";\r\nimport BarsLogo from './images/bars-solid.svg';\r\n\r\n/*when the user scrolls down, hide the navbar. If the user\r\nscrolls bac up, the navbar shows itself\r\n */\r\n\r\n\r\n\r\nvar prevScrollpos = window.pageYOffset;\r\nwindow.onscroll = function () {\r\n    var currentScrollPos = window.pageYOffset;\r\n\r\n    if (prevScrollpos > currentScrollPos) {\r\n        document.getElementById(\"navbar\").style.top = \"0\";\r\n        if (currentScrollPos === 0) {\r\n            document.getElementById(\"navbar\").style.backgroundColor = \"transparent\";\r\n            document.getElementById(\"navbar-heading\").style.color = \"#404040\";\r\n            document.getElementById(\"bar1\").style.backgroundColor = \"#404040\";\r\n            document.getElementById(\"bar2\").style.backgroundColor = \"#404040\";\r\n            document.getElementById(\"bar3\").style.backgroundColor = \"#404040\";\r\n\r\n\r\n        } else {\r\n            document.getElementById(\"navbar\").style.backgroundColor = 'rgba(119,114,107,0.7)';\r\n\r\n\r\n            document.getElementById(\"navbar-heading\").style.color = \"whitesmoke\";\r\n            document.getElementById(\"bar1\").style.backgroundColor = \"whitesmoke\";\r\n            document.getElementById(\"bar2\").style.backgroundColor = \"whitesmoke\";\r\n            document.getElementById(\"bar3\").style.backgroundColor = \"whitesmoke\";\r\n\r\n\r\n        }\r\n\r\n    } else {\r\n        document.getElementById(\"navbar\").style.top = \"-100px\";\r\n        if (document.getElementById(\"nav-items\").className === \"nav-items active\")\r\n            document.getElementById(\"hamburger\").click();\r\n    }\r\n        prevScrollpos = currentScrollPos;\r\n}\r\n\r\n\r\n\r\nexport default class NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {addClass: false}\r\n    }\r\n    toggle() {\r\n        this.setState({addClass: !this.state.addClass});\r\n    }\r\n    render() {\r\n        let navClass = [\"nav-items\"];\r\n        if(this.state.addClass) {\r\n            navClass.push('active');\r\n        }\r\n        return (\r\n\r\n            <nav id=\"navbar\" className=\"navbar-background\" href={prevScrollpos}>\r\n\r\n                <div className=\"nav-list\">\r\n                    <h2 id={\"navbar-heading\"}>JAY ANDERSON</h2>\r\n                    <div id = \"nav-items\" className={navClass.join(' ')}>\r\n                        <a id = \"Contact-link\" href=\"#Contact\">Contact</a>\r\n                        <a id = \"Timeline-link\" href=\"#Timeline\">Timeline</a>\r\n                        {/*<a href=\"#portfolio\">Portfolio</a>\r\n                        <a href=\"#Services\">Services</a>*/}\r\n                        <a id = \"About-link\" href=\"#about\">About</a>\r\n                        <a id = \"Home-link\" href=\"#Introduction\">Home</a>\r\n                    </div>\r\n\r\n                    <div id=\"hamburger\" className={\"hamburger\"} onClick = {this.toggle.bind(this)}>\r\n                        <a>\r\n                            <span className={\"bars\"} id=\"bar1\" alt=\"bars\" src={BarsLogo}/>\r\n                            <span className={\"bars\"} id=\"bar2\" alt=\"bars\" src={BarsLogo}/>\r\n                            <span className={\"bars\"} id=\"bar3\" alt=\"bars\" src={BarsLogo}/>\r\n                        </a>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\introduction.jsx",[],"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\timeline.jsx",[],"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\about.jsx",[],"C:\\Users\\jayda\\WebstormProjects\\my-portfolio\\my-portfolio\\src\\components\\contact.jsx",["42"],"import React, { Component } from 'react';\r\nimport * as emailjs from 'emailjs-com';\r\n\r\nexport default class Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: \"\",\r\n            subject: '',\r\n            message: '',\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.resetForm = this.resetForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const { name, email, subject, message } = this.state;\r\n\r\n        let templateParams = {\r\n            from_name: name,\r\n            from_email: email,\r\n            to_name: 'Jay Anderson',\r\n            subject: subject,\r\n            message: message,\r\n        }\r\n\r\n        emailjs.send(\r\n            'service_25m4puf',\r\n            'template_s8seghe',\r\n            templateParams,\r\n            'user_lj0ocfB8GreQNQSaBz5qv'\r\n        )\r\n\r\n        this.resetForm();\r\n\r\n    };\r\n\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            subject: '',\r\n            message: '',\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name] : e.target.value})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {name, email, subject, message, sentMessage } = this.state;\r\n        return (\r\n            <div className={\"container\"}>\r\n                <section id=\"Contact\" className={\"contact\"} data-section={\"contact\"}>\r\n                    <div className={\"narrow-content\"}>\r\n                        <h1>Contact Me</h1>\r\n                        <div className={\"row\"}>\r\n                            <div className={\"column-contact\"}>\r\n                                <h2>Thanks so much for visiting!</h2>\r\n                                <p>If you like what you saw (or don't), then feel free to contact me.\r\n                                I've included links to my LinkedIn, Github, and email below. If you'd like\r\n                                to read the code that I used for this website, then I've uploaded it,\r\n                                along with other projects on there.\r\n                                </p>\r\n\r\n                                <p>You can also submit your contact details and message to the right\r\n                                and I'll get back to you as soon as possible.</p>\r\n                                <div id={\"icon-list-contact\"}>\r\n                                    <div className={\"social-media-image\"}>\r\n                                        <div className={\"social-media\" }><a className={\"github-intro\"} href=\"https://github.com/jda432\">\r\n                                            <img src=\"images/github_logo.png\" alt=\"Github Link\" width=\"23px\" height={\"auto\"} border={\"0\"}/>\r\n                                        </a></div>\r\n                                        <div className={\"social-media\" }><a className={\"linkedin-intro\"} href=\"https://www.linkedin.com/in/jaydanderson/\" border={\"0\"}>\r\n                                            <img src=\"images/linked_in_logo.png\" alt=\"LinkedIn Link\" width=\"27px\" height={\"auto\"} />\r\n                                        </a></div>\r\n                                    </div>\r\n                                    <div className={\"social-media-text\"}>\r\n                                        <text>jda432@stern.nyu.edu</text>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={\"column-contact\"}>\r\n                            <form onSubmit = {this.handleSubmit}>\r\n                                <label>Name</label>\r\n                                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"John Smith\" value={name} onChange={this.handleChange}>\r\n                                </input>\r\n                                <label>Email</label>\r\n                                <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"johnsmith@random.com\"  value={email} onChange={this.handleChange}>\r\n                                </input>\r\n                                <label>Subject</label>\r\n                                <input type=\"text\" id=\"subject\" name=\"subject\" placeholder=\"Love what you've done with the place.\"  value={subject} onChange={this.handleChange}>\r\n                                </input>\r\n                                <label>Message</label>\r\n                                <textarea name=\"message\" placeholder=\"Write your message here.\"  value={message} onChange={this.handleChange} />\r\n\r\n                                <input className={\"submit\"} type={\"submit\"} value={\"Submit\"} />\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":9,"nodeType":"49","messageId":"50","endLine":2,"endColumn":15},{"ruleId":"47","severity":1,"message":"51","line":2,"column":17,"nodeType":"49","messageId":"50","endLine":2,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":76,"column":25,"nodeType":"54","endLine":76,"endColumn":28},{"ruleId":"47","severity":1,"message":"55","line":59,"column":47,"nodeType":"49","messageId":"50","endLine":59,"endColumn":58},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'sentMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]